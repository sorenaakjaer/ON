name: Auto Increment and Release

on:
  push:
    branches:
      - main  # Adjust this as necessary

jobs:
  check-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        run: |
          if [[ "${{ github.repository }}" != "sorenaakjaer/ON" ]]; then
            echo "This workflow is intended to run only on the sorenaakjaer/ON repository."
            exit 1
          fi

  release:
    needs: check-repo
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Important: fetch all history so we can get all tags

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Fetch all tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    
    - name: Get latest tag and create new tag
      id: new_tag
      run: |
        # Get latest tag that matches the pattern
        LATEST_TAG=$(git tag --list '3.4.*' --sort=-version:refname | head -n 1)
        echo "Latest tag: $LATEST_TAG"
        
        # If no tag found, start with 3.4.4 so next is 3.4.5
        if [[ -z "$LATEST_TAG" ]]; then
          LATEST_TAG="3.4.6"
        fi
        
        # Increment the patch version
        IFS='.' read -ra ADDR <<< "$LATEST_TAG"
        NEW_TAG="${ADDR[0]}.${ADDR[1]}.$((${ADDR[2]} + 1))"
        echo "New tag: $NEW_TAG"
        
        # Set the new tag as an output variable
        echo "::set-output name=tag::$NEW_TAG"
        
        # Create and push the new tag
        git tag $NEW_TAG
        git push origin $NEW_TAG
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.new_tag.outputs.tag }}
        release_name: Release ${{ steps.new_tag.outputs.tag }}
        draft: false
        prerelease: false
